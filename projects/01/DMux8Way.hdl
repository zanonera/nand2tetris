// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // Put your code here:
	Not(in=sel[0], out=notsel0);
	Not(in=sel[1], out=notsel1);
	Not(in=sel[2], out=notsel2);
	// Output a
	And(a=in, b=notsel0, out=internala);
	And(a=internala, b=notsel1, out=internala2);
	And(a=internala2, b=notsel2, out=a);
	// Output b
	And(a=in, b=sel[0], out=internalb);
	And(a=internalb, b=notsel1, out=internalb2);
	And(a=internalb2, b=notsel2, out=b);
	// Output c
	And(a=in, b=notsel0, out=internalc);
	And(a=internalc, b=sel[1], out=internalc2);
	And(a=internalc2, b=notsel2, out=c);
	// Output d
	And(a=in, b=sel[0], out=internald);
	And(a=internald, b=sel[1], out=internald2);
	And(a=internald2, b=notsel2, out=d);
	// Output e
	And(a=in, b=notsel0, out=internale);
	And(a=internale, b=notsel1, out=internale2);
	And(a=internale2, b=sel[2], out=e);
	// Output f
	And(a=in, b=sel[0], out=internalf);
	And(a=internalf, b=notsel1, out=internalf2);
	And(a=internalf2, b=sel[2], out=f);
	// Output g
	And(a=in, b=notsel0, out=internalg);
	And(a=internalg, b=sel[1], out=internalg2);
	And(a=internalg2, b=sel[2], out=g);
	// Output h
	And(a=in, b=sel[0], out=internalh);
	And(a=internalh, b=sel[1], out=internalh2);
	And(a=internalh2, b=sel[2], out=h);

}