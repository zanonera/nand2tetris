// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

/*
RAM - 0x0000 -> 0b_000_0000_0000_0000
	  0x3999 -> 0b‭‭_011_1111_1111_1111‬
SCR - 0x4000 -> 0b_‭100_0000_0000_0000‬
	  0x5FFF -> 0b_‭101_1111_1111_1111‬
KBD - 0x6000 -> 0b_‭110_0000_0000_0000‬
*/ 
 
CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:
    // Put your code here:
	// Create a load signal for RAM
	Not(in=address[14], out=notPTB);
	And(a=notPTB, b=load, out=loadRAM);
	// Create a load signal for Screen
	Not(in=address[13], out=notPT);
	And(a=notPT, b=address[14], out=quaseSCREEN);
	And(a=quaseSCREEN, b=load, out=loadSCREEN);
	// The Hack memory map -> 1x16kb, 1x8kb & 1 16bit register
	RAM16K(in=in ,load=loadRAM ,address=address[0..13] ,out=RAMout);
	Screen(in=in ,load=loadSCREEN ,address=address[0..12] ,out=ScreenOUT);
	Keyboard(out=KeyboardOUT);
	// Selects the correct output using the 2 MSBs
	Mux4Way16(a=RAMout ,b=RAMout ,c=ScreenOUT ,d=KeyboardOUT ,sel=address[13..14] ,out=out);
}